{"name": "test_CredKart_Login_Excel_003", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff70fbbfea5+79173]\n\tGetHandleVerifier [0x0x7ff70fbbff00+79264]\n\t(No symbol) [0x0x7ff70f979e5a]\n\t(No symbol) [0x0x7ff70f9d0586]\n\t(No symbol) [0x0x7ff70f9d083c]\n\t(No symbol) [0x0x7ff70fa24247]\n\t(No symbol) [0x0x7ff70f9f89af]\n\t(No symbol) [0x0x7ff70fa2100d]\n\t(No symbol) [0x0x7ff70f9f8743]\n\t(No symbol) [0x0x7ff70f9c14c1]\n\t(No symbol) [0x0x7ff70f9c2253]\n\tGetHandleVerifier [0x0x7ff70fe8a2dd+3004797]\n\tGetHandleVerifier [0x0x7ff70fe8472d+2981325]\n\tGetHandleVerifier [0x0x7ff70fea3380+3107360]\n\tGetHandleVerifier [0x0x7ff70fbdaa2e+188622]\n\tGetHandleVerifier [0x0x7ff70fbe22bf+219487]\n\tGetHandleVerifier [0x0x7ff70fbc8df4+115860]\n\tGetHandleVerifier [0x0x7ff70fbc8fa9+116297]\n\tGetHandleVerifier [0x0x7ff70fbaf558+11256]\n\tBaseThreadInitThunk [0x0x7ffc408c54e0+16]\n\tRtlUserThreadStart [0x0x7ffc426e485b+43]", "trace": "self = <test_CredKart_Login_Excel_003.Test_Login_Excel_003 object at 0x0000020CECFE56D0>\n\n    def test_CredKart_Login_Excel_003(self):\n        self.log.info(\"Testcase test_CredKart_Login_Excel_003 is started\")\n        self.lp = Login_Page_Class(self.driver)\n        self.log.info(\"Reading the data from excel file\")\n        self.rows = Excel_Utils.get_row_count( self.excel_path, self.sheet_name)\n        self.log.info(\"Number of rows in excel file is: \" + str(self.rows))\n        Result_list =[]\n        for i in range(2, self.rows + 1):\n            self.log.info(\"Opening browser and landing on login page--\" + self.login_url)\n            self.driver.get(self.login_url)\n            self.email = Excel_Utils.read_data(self.excel_path, self.sheet_name, i, 2)\n            self.password = Excel_Utils.read_data(self.excel_path, self.sheet_name, i, 3)\n            self.expected_result = Excel_Utils.read_data(self.excel_path, self.sheet_name, i, 4)\n            self.log.info(\"Entering email--\" + str(self.email))\n>           self.lp.Enter_Email(self.email)\n\ntestCase\\test_CredKart_Login_Excel_003.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\Login_Page.py:20: in Enter_Email\n    self.wait.until(expected_conditions.presence_of_element_located((By.ID, self.text_email_id)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bbacce2499c1ca9aa6ebfb9d7e9bf595\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000020CED722480>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff70fbbfea5+79173]\nE       \tGetHandleVerifier [0x0x7ff70fbbff00+79264]\nE       \t(No symbol) [0x0x7ff70f979e5a]\nE       \t(No symbol) [0x0x7ff70f9d0586]\nE       \t(No symbol) [0x0x7ff70f9d083c]\nE       \t(No symbol) [0x0x7ff70fa24247]\nE       \t(No symbol) [0x0x7ff70f9f89af]\nE       \t(No symbol) [0x0x7ff70fa2100d]\nE       \t(No symbol) [0x0x7ff70f9f8743]\nE       \t(No symbol) [0x0x7ff70f9c14c1]\nE       \t(No symbol) [0x0x7ff70f9c2253]\nE       \tGetHandleVerifier [0x0x7ff70fe8a2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff70fe8472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff70fea3380+3107360]\nE       \tGetHandleVerifier [0x0x7ff70fbdaa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff70fbe22bf+219487]\nE       \tGetHandleVerifier [0x0x7ff70fbc8df4+115860]\nE       \tGetHandleVerifier [0x0x7ff70fbc8fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff70fbaf558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffc408c54e0+16]\nE       \tRtlUserThreadStart [0x0x7ffc426e485b+43]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "stdout", "source": "9a25c16f-6e72-4d58-b773-369ab59a562c-attachment.txt", "type": "text/plain"}], "start": 1750322015369, "stop": 1750322021669, "uuid": "5f536da5-bd01-495b-909f-4341ba2eebd8", "historyId": "b4eac6c5b4a057b5950d1caf5535567a", "testCaseId": "b4eac6c5b4a057b5950d1caf5535567a", "fullName": "testCase.test_CredKart_Login_Excel_003.Test_Login_Excel_003#test_CredKart_Login_Excel_003", "labels": [{"name": "parentSuite", "value": "testCase"}, {"name": "suite", "value": "test_CredKart_Login_Excel_003"}, {"name": "subSuite", "value": "Test_Login_Excel_003"}, {"name": "host", "value": "DESKTOP-QECK6IV"}, {"name": "thread", "value": "11688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_CredKart_Login_Excel_003"}]}